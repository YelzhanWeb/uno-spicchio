
services:
  postgres:
    image: postgres:15-alpine
    container_name: restaurant_crm_db
    environment:
      POSTGRES_USER: restaurant_user
      POSTGRES_PASSWORD: restaurant_password
      POSTGRES_DB: restaurant_crm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - restaurant_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restaurant_user -d restaurant_crm"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: restaurant_crm_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - restaurant_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: restaurant_crm_app
  #   environment:
  #     SERVER_PORT: 8080
  #     SERVER_HOST: 0.0.0.0
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_USER: restaurant_user
  #     DB_PASSWORD: restaurant_password
  #     DB_NAME: restaurant_crm
  #     DB_SSLMODE: disable
  #     MINIO_ENDPOINT: minio:9000
  #     MINIO_ACCESS_KEY: minioadmin
  #     MINIO_SECRET_KEY: minioadmin
  #     MINIO_USE_SSL: false
  #     MINIO_BUCKET_DISHES: dishes
  #     MINIO_BUCKET_USERS: users
  #     JWT_SECRET: your-super-secret-key-change-in-production
  #     JWT_EXPIRATION_HOURS: 24
  #     ENV: production
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy
  #   networks:
  #     - restaurant_network
  #   restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

networks:
  restaurant_network:
    driver: bridge